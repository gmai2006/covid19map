{"version":3,"sources":["_nav.js","routes.js","containers/DefaultLayout/DefaultLayout.js"],"names":["items","name","url","icon","routes","path","exact","component","React","lazy","DefaultFooter","DefaultHeader","DefaultLayout","props","loading","className","fixed","fallback","onLogout","e","preventDefault","history","push","signOut","display","navConfig","navigation","router","appRoutes","Container","fluid","map","route","idx","key","render","from","to"],"mappings":"0OAAe,GACbA,MAAO,CACL,CACEC,KAAM,UACNC,IAAK,OACLC,KAAM,eAER,CACEF,KAAM,0BACNC,IAAK,UACLC,KAAM,iBCEGC,EANA,CACb,CAAEC,KAAM,IAAKC,OAAO,EAAML,KAAM,QAChC,CAAEI,KAAM,OAAQC,OAAO,EAAML,KAAM,UAAWM,UANjCC,IAAMC,MAAK,kBAAM,wDAO9B,CAAEJ,KAAM,UAAWC,OAAO,EAAML,KAAM,0BAA2BM,UANpDC,IAAMC,MAAK,kBAAM,mCCkB1BC,EAAgBF,IAAMC,MAAK,kBAAM,iCACjCE,EAAgBH,IAAMC,MAAK,kBAAM,iCA6DxBG,UA3Df,SAAuBC,GAErB,IAAMC,EAAU,kBAAM,yBAAKC,UAAU,oCAAf,eAOtB,OACE,yBAAKA,UAAU,OACb,kBAAC,IAAD,CAAWC,OAAK,GACd,kBAAC,WAAD,CAAWC,SAAUH,KACnB,kBAACH,EAAD,CAAeO,SAAU,SAAAC,GAAC,OATlB,SAACA,GACfA,EAAEC,iBACFP,EAAMQ,QAAQC,KAAK,UAOeC,CAAQJ,QAGxC,yBAAKJ,UAAU,YACb,kBAAC,IAAD,CAAYC,OAAK,EAACQ,QAAQ,MACxB,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,WAAD,KACA,kBAAC,IAAD,eAAeC,UAAWC,GAAgBb,EAA1C,CAAiDc,OAAQA,MAEzD,kBAAC,IAAD,MACA,kBAAC,IAAD,OAEF,0BAAMZ,UAAU,QACd,kBAAC,IAAD,CAAea,UAAWxB,EAAQuB,OAAQA,IAC1C,kBAACE,EAAA,EAAD,CAAWC,OAAK,GACd,kBAAC,WAAD,CAAUb,SAAUH,KAClB,kBAAC,IAAD,KACGV,EAAO2B,KAAI,SAACC,EAAOC,GAClB,OAAOD,EAAMzB,UACX,kBAAC,IAAD,CACE2B,IAAKD,EACL5B,KAAM2B,EAAM3B,KACZC,MAAO0B,EAAM1B,MACbL,KAAM+B,EAAM/B,KACZkC,OAAQ,SAAAtB,GAAK,OACX,kBAACmB,EAAMzB,UAAcM,MAEtB,QAEP,kBAAC,IAAD,CAAUuB,KAAK,IAAIC,GAAG,cAOhC,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAUpB,SAAUH,KAClB,kBAACJ,EAAD","file":"static/js/9.a35743a3.chunk.js","sourcesContent":["export default {\n  items: [\n    {\n      name: 'CoVid19',\n      url: '/map',\n      icon: 'icon-puzzle',\n    },\n    {\n      name: 'Predictive Growth Model',\n      url: '/growth',\n      icon: 'icon-puzzle',\n    },\n   \n  ],\n};\n","import React from 'react';\n\nconst Charts = React.lazy(() => import('./views/Charts'));\nconst Growth = React.lazy(() => import('./views/Growth'));\n\n// https://github.com/ReactTraining/react-router/tree/master/packages/react-router-config\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/map', exact: true, name: 'CoVid19', component: Charts },\n  { path: '/growth', exact: true, name: 'Predictive Growth Model', component: Growth },\n];\n\nexport default routes;\n","import React, { Suspense } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport * as router from 'react-router-dom';\nimport { Container } from 'reactstrap';\n\nimport {\n  AppFooter,\n  AppHeader,\n  AppSidebar,\n  AppSidebarFooter,\n  AppSidebarForm,\n  AppSidebarHeader,\n  AppSidebarMinimizer,\n  AppBreadcrumb2 as AppBreadcrumb,\n  AppSidebarNav2 as AppSidebarNav,\n} from '@coreui/react';\n// sidebar nav config\nimport navigation from '../../_nav';\n// routes config\nimport routes from '../../routes';\n\nconst DefaultFooter = React.lazy(() => import('./DefaultFooter'));\nconst DefaultHeader = React.lazy(() => import('./DefaultHeader'));\n\nfunction DefaultLayout(props) {\n\n  const loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>;\n\n  const signOut = (e) => {\n    e.preventDefault()\n    props.history.push('/login')\n  }\n\n  return (\n    <div className=\"app\">\n      <AppHeader fixed>\n        <Suspense  fallback={loading()}>\n          <DefaultHeader onLogout={e=>signOut(e)}/>\n        </Suspense>\n      </AppHeader>\n      <div className=\"app-body\">\n        <AppSidebar fixed display=\"lg\">\n          <AppSidebarHeader />\n          <AppSidebarForm />\n          <Suspense>\n          <AppSidebarNav navConfig={navigation} {...props} router={router}/>\n          </Suspense>\n          <AppSidebarFooter />\n          <AppSidebarMinimizer />\n        </AppSidebar>\n        <main className=\"main\">\n          <AppBreadcrumb appRoutes={routes} router={router}/>\n          <Container fluid>\n            <Suspense fallback={loading()}>\n              <Switch>\n                {routes.map((route, idx) => {\n                  return route.component ? (\n                    <Route\n                      key={idx}\n                      path={route.path}\n                      exact={route.exact}\n                      name={route.name}\n                      render={props => (\n                        <route.component {...props} />\n                      )} />\n                  ) : (null);\n                })}\n                <Redirect from=\"/\" to=\"/map\" />\n              </Switch>\n            </Suspense>\n          </Container>\n        </main>\n      \n      </div>\n      <AppFooter>\n        <Suspense fallback={loading()}>\n          <DefaultFooter />\n        </Suspense>\n      </AppFooter>\n    </div>\n  );\n}\n\nexport default DefaultLayout;\n"],"sourceRoot":""}